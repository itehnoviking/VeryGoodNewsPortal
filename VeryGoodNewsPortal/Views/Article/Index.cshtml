@model ArticleIndexViewModel

<div class="container">
    <div class="row">
        <div class="col-4 offset-4">
            <form asp-controller="Article" asp-action="GetNewsFromSources" method="post">
                <input class="btn btn-primary" type="submit" value="GET NEWS" />
                <br />
                <br />
            </form>
        </div>
    </div>

    <div class="mb-3 row">
        <div class="col-sm-11">
            <input type="text" name="searchText" class="form-control" id="search-article-text" list="titles-list" />
            <datalist id="titles-list"></datalist>
        </div>
        <div class="col-sm-1">
            <button type="submit" class="btn btn-primary mb-3" id="search-article-btn">Search</button>
        </div>
    </div>

    <div id="spinner" class="spinner-border" role="status" hidden>
        <span class="visually-hidden">
            Loading...
        </span>
    </div>

    <div class="shadowbox">
        <a asp-controller="Article" asp-action="Create" class="btn btn-secondary">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-file-earmark-plus-fill" viewBox="0 0 16 16">
                <path d="M9.293 0H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V4.707A1 1 0 0 0 13.707 4L10 .293A1 1 0 0 0 9.293 0zM9.5 3.5v-2l3 3h-2a1 1 0 0 1-1-1zM8.5 7v1.5H10a.5.5 0 0 1 0 1H8.5V11a.5.5 0 0 1-1 0V9.5H6a.5.5 0 0 1 0-1h1.5V7a.5.5 0 0 1 1 0z"></path>
            </svg>
        </a>
    </div>
    <br>
    <div class="row g-3" id="article-list">
        @foreach (var article in @Model.ArticleLists)
        {
            await Html.RenderPartialAsync("ArticlePreviewPartial", article);
        }
    </div>
</div>

@await Html.PartialAsync("ArticlesPaginationPartial", Model.PagesAmount);

@section Scripts
    {
    <script src="~/js/article.js"></script>

    <script>

        let list = document.getElementById('titles-list');
        let titlesInput = document.getElementById('search-article-text');

        titlesInput.addEventListener('keyup', autocomplete);

        function autocomplete(event) {
            let value = event.target.value;
            list.innerHTML = '';

            if (value.length >= 3) {
                fetch(`/article/gettitles?title=${value}`, { method: 'get' })
                    .then((response) => {
                        if (response.ok) {
                            return response.json();
                        }
                        else {
                            console.log(response.status);
                            return null;
                        }
                    })
                    .then((json) => {
                        console.log(json);
                        json.forEach(function(title) {
                            let opt = document.createElement('option');
                            opt.value = title;
                            list.appendChild(opt);
                        });
                    });
            }
        }

    </script>
}



    @*<input class="form-control" list="countries-list" id="countries-input" placeholder="Type to search...">
    <datalist id="countries-list"></datalist>*@

    @*@section Scripts{
    <script>

        let list = document.getElementById('titles-list');
        let titlesInput = document.getElementById('search-article-text');

        countriesInput.addEventListener('keyup', autocomplete);

        function autocomplete(event) {
            let value = event.target.value;
            list.innerHTML = '';

            if (value.length >= 3) {
                fetch(`/home/gettitles?title=${value}`, { method: 'get' })
                    .then((response) => {
                        if (response.ok) {
                            return response.json();
                        }
                        else {
                            console.log(response.status);
                            return null;
                        }
                    })
                    .then((json) => {
                        console.log(json);
                        json.forEach(function(title) {
                            let opt = document.createElement('option');
                            opt.value = title;
                            list.appendChild(opt);
                        });
                    });
            }
        }

    </script>
}*@